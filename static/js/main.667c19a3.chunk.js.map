{"version":3,"sources":["Editor.js","Preview.js","Toolbar.js","App.js","index.js"],"names":["Editor","markdown","onChange","className","id","value","marked","setOptions","gfm","headerIds","breaks","Preview","rawMarkup","dangerouslySetInnerHTML","__html","Toolbar","text","icon","onClick","title","style","marginRight","App","useState","setMarkdown","isEditorMaximized","setIsEditorMaximized","isPreviewerMaximized","setIsPreviewerMaximized","classes","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAYeA,EAZA,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACpC,OACE,qBAAKC,GAAG,SAASD,UAAWA,EAA5B,SACE,0BACEC,GAAG,cACHC,MAAOJ,EACPC,SAAUA,O,OCJlBI,SAAOC,WAAW,CAChBC,KAAK,EACLC,WAAW,EACXC,QAAQ,IAGV,IAeeC,EAfC,SAAC,GAA6B,IAA3BV,EAA0B,EAA1BA,SAAUE,EAAgB,EAAhBA,UACrBS,EAAYN,iBAAOL,GACzB,OACE,mCACE,qBACEG,GAAG,UACHD,UAAWA,EACXU,wBAAyB,CACvBC,OAAQF,QCAHG,EAhBC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC7B,OACE,sBAAKf,UAAU,UAAf,UACE,gCACE,mBACEA,UAAU,uBACVgB,MAAM,oBACNC,MAAO,CAAEC,YAAa,SAEvBL,KAEH,mBAAGb,UAAWc,EAAMC,QAASA,QC8FpBI,MApDf,WACE,MAAgCC,mBA9CjB,0pCA8Cf,mBAAOtB,EAAP,KAAiBuB,EAAjB,KACA,EAAkDD,oBAAS,GAA3D,mBAAOE,EAAP,KAA0BC,EAA1B,KACA,EAAwDH,oBAAS,GAAjE,mBAAOI,EAAP,KAA6BC,EAA7B,KAcMC,EAAUJ,EACZ,CAAC,iBAAkB,mBAAoB,OAAQ,wBAC/CE,EACA,CAAC,OAAQ,OAAQ,kBACjB,CAAC,mBAAoB,mBAAoB,oBAE7C,OACE,qBAAKxB,UAAU,eAAf,SACE,iCACE,0BAASA,UAAU,iBAAnB,UACE,cAAC,EAAD,CACEa,KAAK,SACLE,QApBV,WACEQ,GAAsBD,IAoBdR,KAAMY,EAAQ,KAEhB,cAAC,EAAD,CACE3B,SA5BV,SAAsB4B,GACpBN,EAAYM,EAAEC,OAAO1B,QA4BbJ,SAAUA,EACVE,UAAW0B,EAAQ,QAIvB,0BAAS1B,UAAU,kBAAnB,UACE,cAAC,EAAD,CACEa,KAAK,YACLE,QA7BV,WACEU,GAAyBD,IA6BjBV,KAAMY,EAAQ,KAEhB,cAAC,EAAD,CAAS5B,SAAUA,EAAUE,UAAW0B,EAAQ,cC9F1DG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.667c19a3.chunk.js","sourcesContent":["const Editor = ({ markdown, onChange, className }) => {\r\n  return (\r\n    <div id=\"editor\" className={className}>\r\n      <textarea\r\n        id=\"editor-text\"\r\n        value={markdown}\r\n        onChange={onChange}\r\n      ></textarea>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import { marked } from \"marked\";\r\n\r\nmarked.setOptions({\r\n  gfm: true,\r\n  headerIds: false,\r\n  breaks: true,\r\n});\r\n\r\nconst Preview = ({ markdown, className }) => {\r\n  const rawMarkup = marked(markdown);\r\n  return (\r\n    <>\r\n      <div\r\n        id=\"preview\"\r\n        className={className}\r\n        dangerouslySetInnerHTML={{\r\n          __html: rawMarkup,\r\n        }}\r\n      ></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","const Toolbar = ({ text, icon, onClick }) => {\r\n  return (\r\n    <div className=\"toolbar\">\r\n      <div>\r\n        <i\r\n          className=\"fa fa-free-code-camp\"\r\n          title=\"no-stack-dub-sack\"\r\n          style={{ marginRight: \"8px\" }}\r\n        />\r\n        {text}\r\n      </div>\r\n      <i className={icon} onClick={onClick} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import { useState } from \"react\";\n\nimport \"./App.scss\";\n\nimport Editor from \"./Editor\";\nimport Preview from \"./Preview\";\nimport ToolBar from \"./Toolbar\";\n\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n`;\n\nfunction App() {\n  const [markdown, setMarkdown] = useState(placeholder);\n  const [isEditorMaximized, setIsEditorMaximized] = useState(false);\n  const [isPreviewerMaximized, setIsPreviewerMaximized] = useState(false);\n\n  function handleChange(e) {\n    setMarkdown(e.target.value);\n  }\n\n  function handleEditorClick() {\n    setIsEditorMaximized(!isEditorMaximized);\n  }\n\n  function handlePreviewClick() {\n    setIsPreviewerMaximized(!isPreviewerMaximized);\n  }\n\n  const classes = isEditorMaximized\n    ? [\"fa fa-compress\", \"editor-maximized\", \"null\", \"preview-section hide\"]\n    : isPreviewerMaximized\n    ? [\"null\", \"hide\", \"fa fa-compress\"]\n    : [\"fa fa-arrows-alt\", \"editor-minimized\", \"fa fa-arrows-alt\"];\n\n  return (\n    <div className=\"main-wrapper\">\n      <main>\n        <section className=\"editor-section\">\n          <ToolBar\n            text=\"Editor\"\n            onClick={handleEditorClick}\n            icon={classes[0]}\n          />\n          <Editor\n            onChange={handleChange}\n            markdown={markdown}\n            className={classes[1]}\n          />\n        </section>\n\n        <section className=\"preview-section\">\n          <ToolBar\n            text=\"Previewer\"\n            onClick={handlePreviewClick}\n            icon={classes[2]}\n          />\n          <Preview markdown={markdown} className={classes[3]} />\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}